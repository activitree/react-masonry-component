{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_elementResizeDetector","_interopRequireDefault","_lodash","_lodash2","_propTypes","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","isBrowser","window","Masonry","imagesloaded","MasonryComponent","_Component","props","_this","_classCallCheck2","masonry","erd","undefined","latestKnownDomChildren","imagesLoadedCancelRef","masonryContainer","initializeMasonry","bind","getCurrentDomChildren","diffDomChildren","performLayout","derefImagesLoaded","imagesLoaded","reloadLayout","initializeResizableChildren","listenToElementResize","destroyErd","_inherits2","_createClass2","key","value","force","options","onLayoutComplete","on","onRemoveComplete","node","children","itemSelector","querySelectorAll","Array","slice","forceItemReload","knownChildrenStillAttached","element","parentNode","currentDomChildren","removed","attachedKnownChild","indexOf","newDomChildren","currentChild","beginningIndex","prepended","newChild","prepend","appended","el","moved","child","index","old","new","diff","reloadItems","enableResizableChildren","removeAllListeners","remove","updateOnEachComponentUpdate","disableImagesLoaded","event","updateOnEachImageLoad","handler","debounce","instance","onImagesLoaded","imgLoad","imagesLoadedOptions","off","cancel","_this2","layout","leading","elementResizeDetectorMaker","strategy","listenTo","uninstall","componentDidMount","componentDidUpdate","componentWillUnmount","destroy","render","_this3","omit","propTypes","React","createElement","elementType","ref","Component","module","exports","defaultProps","className","PropTypes","bool","func","object","string"],"sources":["../src/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport elementResizeDetectorMaker from 'element-resize-detector'\nimport debounce from 'lodash.debounce'\nimport omit from 'lodash.omit'\nimport PropTypes from 'prop-types'\n\nconst isBrowser = typeof window !== 'undefined'\nconst Masonry = isBrowser ? window.Masonry || require('masonry-layout') : null\nconst imagesloaded = isBrowser ? require('imagesloaded') : null\n\nclass MasonryComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.masonry = false\n    this.erd = undefined\n    this.latestKnownDomChildren = []\n    this.imagesLoadedCancelRef = undefined\n    this.masonryContainer = undefined\n\n    this.initializeMasonry = this.initializeMasonry.bind(this)\n    this.getCurrentDomChildren = this.getCurrentDomChildren.bind(this)\n    this.diffDomChildren = this.diffDomChildren.bind(this)\n    this.performLayout = this.performLayout.bind(this)\n    this.derefImagesLoaded = this.derefImagesLoaded.bind(this)\n    this.imagesLoaded = this.imagesLoaded.bind(this)\n    this.reloadLayout = this.reloadLayout.bind(this)\n    this.initializeResizableChildren = this.initializeResizableChildren.bind(this)\n    this.listenToElementResize = this.listenToElementResize.bind(this)\n    this.destroyErd = this.destroyErd.bind(this)\n  }\n\n  initializeMasonry (force) {\n    if (!this.masonry || force) {\n      this.masonry = new Masonry(\n        this.masonryContainer,\n        this.props.options\n      )\n\n      if (this.props.onLayoutComplete) {\n        this.masonry.on('layoutComplete', this.props.onLayoutComplete)\n      }\n\n      if (this.props.onRemoveComplete) {\n        this.masonry.on('removeComplete', this.props.onRemoveComplete)\n      }\n\n      this.latestKnownDomChildren = this.getCurrentDomChildren()\n    }\n  }\n\n  getCurrentDomChildren () {\n    const node = this.masonryContainer\n    const children = this.props.options.itemSelector ? node.querySelectorAll(this.props.options.itemSelector) : node.children\n    return Array.prototype.slice.call(children)\n  }\n\n  diffDomChildren () {\n    let forceItemReload = false\n\n    const knownChildrenStillAttached = this.latestKnownDomChildren.filter(function(element) {\n      /*\n       * take only elements attached to DOM\n       * (aka the parent is the masonry container, not null)\n       * otherwise masonry would try to \"remove it\" again from the DOM\n       */\n      return !!element.parentNode\n    })\n\n    /*\n     * If not all known children are attached to the dom - we have no other way of notifying\n     * masonry to remove the ones not still attached besides invoking a complete item reload.\n     * basically all the rest of the code below does not matter in that case.\n     */\n    if (knownChildrenStillAttached.length !== this.latestKnownDomChildren.length) {\n      forceItemReload = true\n    }\n\n    const currentDomChildren = this.getCurrentDomChildren()\n\n    /*\n     * Since we are looking for a known child which is also attached to the dom AND\n     * not attached to the dom at the same time - this would *always* produce an empty array.\n     */\n    const removed = knownChildrenStillAttached.filter(function(attachedKnownChild) {\n      return !~currentDomChildren.indexOf(attachedKnownChild)\n    })\n\n    /*\n     * This would get any children which are attached to the dom but are *unkown* to us\n     * from previous renders\n     */\n    const newDomChildren = currentDomChildren.filter(function(currentChild) {\n      return !~knownChildrenStillAttached.indexOf(currentChild)\n    })\n\n    let beginningIndex = 0\n\n    // get everything added to the beginning of the DOMNode list\n    const prepended = newDomChildren.filter(function(newChild) {\n      const prepend = (beginningIndex === currentDomChildren.indexOf(newChild))\n\n      if (prepend) {\n        // increase the index\n        beginningIndex++\n      }\n\n      return prepend\n    })\n\n    // we assume that everything else is appended\n    const appended = newDomChildren.filter(function(el) {\n      return prepended.indexOf(el) === -1\n    })\n\n    /*\n     * otherwise we reverse it because so we're going through the list picking off the items that\n     * have been added at the end of the list. this complex logic is preserved in case it needs to be\n     * invoked\n     *\n     * const endingIndex = currentDomChildren.length - 1\n     *\n     * newDomChildren.reverse().filter(function(newChild, i){\n     *     const append = endingIndex == currentDomChildren.indexOf(newChild)\n     *\n     *     if (append) {\n     *         endingIndex--\n     *     }\n     *\n     *     return append\n     * })\n     */\n\n    // get everything added to the end of the DOMNode list\n    let moved = []\n\n    /*\n     * This would always be true (see above about the lofic for \"removed\")\n     */\n    if (removed.length === 0) {\n      /*\n       * 'moved' will contain some random elements (if any) since the \"knownChildrenStillAttached\" is a filter\n       * of the \"known\" children which are still attached - All indexes could basically change. (for example\n       * if the first element is not attached)\n       * Don't trust this array.\n       */\n      moved = knownChildrenStillAttached.filter(function(child, index) {\n        return index !== currentDomChildren.indexOf(child)\n      })\n    }\n\n    this.latestKnownDomChildren = currentDomChildren\n\n    return {\n      old: knownChildrenStillAttached, // Not used\n      new: currentDomChildren, // Not used\n      removed: removed,\n      appended: appended,\n      prepended: prepended,\n      moved: moved,\n      forceItemReload: forceItemReload\n    }\n  }\n\n  performLayout () {\n    const diff = this.diffDomChildren()\n    let reloadItems = diff.forceItemReload || diff.moved.length > 0\n\n    // Would never be true. (see comments of 'diffDomChildren' about 'removed')\n    if (diff.removed.length > 0) {\n      if (this.props.enableResizableChildren) {\n        diff.removed.forEach(this.erd.removeAllListeners, this.erd)\n      }\n      this.masonry.remove(diff.removed)\n      reloadItems = true\n    }\n\n    if (diff.appended.length > 0) {\n      this.masonry.appended(diff.appended)\n\n      if (diff.prepended.length === 0) {\n        reloadItems = true\n      }\n\n      if (this.props.enableResizableChildren) {\n        diff.appended.forEach(this.listenToElementResize, this)\n      }\n    }\n\n    if (diff.prepended.length > 0) {\n      if (!reloadItems) {\n        this.masonry.prepended(diff.prepended)\n      }\n\n      if (this.props.enableResizableChildren) {\n        diff.prepended.forEach(this.listenToElementResize, this)\n      }\n    }\n\n    if (reloadItems) {\n      this.masonry.reloadItems()\n    }\n\n    if (this.props.updateOnEachComponentUpdate || reloadItems) {\n      this.reloadLayout()\n    }\n  }\n\n  derefImagesLoaded () {\n    this.imagesLoadedCancelRef()\n    this.imagesLoadedCancelRef = undefined\n  }\n\n  imagesLoaded () {\n    if (this.props.disableImagesLoaded) {\n      return\n    }\n\n    if (this.imagesLoadedCancelRef) {\n      this.derefImagesLoaded()\n    }\n\n    const event = this.props.updateOnEachImageLoad ? 'progress' : 'always'\n    const handler = debounce(\n      function(instance) {\n        if (this.props.onImagesLoaded) {\n          this.props.onImagesLoaded(instance)\n        }\n        this.reloadLayout()\n      }.bind(this), 100)\n\n    const imgLoad = imagesloaded(this.masonryContainer, this.props.imagesLoadedOptions).on(event, handler)\n\n    this.imagesLoadedCancelRef = function() {\n      imgLoad.off(event, handler)\n      handler.cancel()\n    }\n  }\n\n  reloadLayout () {\n    debounce(() => {\n        this.masonry.layout()\n      }, 100, {\n        leading: true\n      }\n    )\n  }\n\n  initializeResizableChildren () {\n    if (!this.props.enableResizableChildren) {\n      return\n    }\n\n    this.erd = elementResizeDetectorMaker({\n      strategy: 'scroll'\n    })\n\n    this.latestKnownDomChildren.forEach(this.listenToElementResize, this)\n  }\n\n  listenToElementResize (el) {\n    this.erd.listenTo(el, this.reloadLayout)\n  }\n\n  destroyErd () {\n    if (this.erd) {\n      this.latestKnownDomChildren.forEach(this.erd.uninstall, this.erd)\n    }\n  }\n\n  componentDidMount () {\n    this.initializeMasonry()\n    this.initializeResizableChildren()\n    this.imagesLoaded()\n  }\n\n  componentDidUpdate () {\n    this.performLayout()\n    this.imagesLoaded()\n  }\n\n  componentWillUnmount () {\n    this.destroyErd()\n\n    // unregister events\n    if (this.props.onLayoutComplete) {\n      this.masonry.off('layoutComplete', this.props.onLayoutComplete)\n    }\n\n    if (this.props.onRemoveComplete) {\n      this.masonry.off('removeComplete', this.props.onRemoveComplete)\n    }\n\n    if (this.imagesLoadedCancelRef) {\n      this.derefImagesLoaded()\n    }\n    this.masonry.destroy()\n  }\n\n  render () {\n    const props = omit(this.props, Object.keys(MasonryComponent.propTypes))\n    return React.createElement(this.props.elementType, {...props, ref: n => this.masonryContainer = n }, this.props.children)\n  }\n}\n\nmodule.exports = MasonryComponent\nmodule.exports.default = MasonryComponent\n\nMasonryComponent.defaultProps = {\n  enableResizableChildren: false,\n  disableImagesLoaded: false,\n  updateOnEachImageLoad: false,\n  options: {},\n  imagesLoadedOptions: {},\n  className: '',\n  elementType: 'div',\n  onLayoutComplete: () => {},\n  onRemoveComplete: () => {},\n  updateOnEachComponentUpdate: true\n}\n\n\nMasonryComponent.propTypes = {\n  enableResizableChildren: PropTypes.bool,\n  disableImagesLoaded: PropTypes.bool,\n  onImagesLoaded: PropTypes.func,\n  updateOnEachImageLoad: PropTypes.bool,\n  options: PropTypes.object,\n  imagesLoadedOptions: PropTypes.object,\n  elementType: PropTypes.string,\n  onLayoutComplete: PropTypes.func,\n  onRemoveComplete: PropTypes.func,\n  updateOnEachComponentUpdate: PropTypes.bool\n}\n"],"mappings":"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","ignoreList":[]}